name: üçé iOS Build & TestFlight Deploy

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
  workflow_dispatch:

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}

jobs:
  # iOS Build and TestFlight Upload
  ios-build-and-deploy:
    name: üöÄ Build iOS & Deploy to TestFlight
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev' || github.event_name == 'workflow_dispatch'
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v4

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: üèó Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üçé Build iOS for TestFlight
        id: ios_build
        run: |
          echo "üî® Building iOS app for TestFlight submission..."
          echo "‚è∞ Started at: $(date)"
          eas build --platform ios --profile preview --non-interactive --wait
          echo "‚úÖ Build completed at: $(date)"

      - name: üöÄ Submit to TestFlight
        id: ios_submit
        run: |
          echo "üöÄ Submitting to TestFlight..."
          eas submit --platform ios --profile preview --latest --non-interactive
          echo "‚úÖ Submitted at: $(date)"

      - name: üéâ Success Summary
        if: success()
        run: |
          echo "## üéâ iOS Build & TestFlight Success! üöÄ" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ‚úÖ What Just Happened:" >> $GITHUB_STEP_SUMMARY
          echo "- üî® **iOS app built successfully** using EAS Build" >> $GITHUB_STEP_SUMMARY
          echo "- üöÄ **Automatically uploaded to TestFlight**" >> $GITHUB_STEP_SUMMARY
          echo "- üì± **Testers will receive notifications** shortly" >> $GITHUB_STEP_SUMMARY
          echo "- ‚ö° **No manual intervention needed**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì± For Your Testers:" >> $GITHUB_STEP_SUMMARY
          echo "- Check the **TestFlight app** for the new build" >> $GITHUB_STEP_SUMMARY
          echo "- New build will be available for **internal testing immediately**" >> $GITHUB_STEP_SUMMARY
          echo "- Push notifications should arrive **within 5-10 minutes**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Build Info:" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build completed:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üéØ **Next deployment:** Push to \`dev\` branch again anytime!" >> $GITHUB_STEP_SUMMARY

      - name: üì¢ Slack Success Notification
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          custom_payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üéâ iOS TestFlight Deploy Success!"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*App:* Aji Salit"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Platform:* üçé iOS"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Status:* ‚úÖ Success"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Deployed by:* ${{ github.actor }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:* `${{ github.ref_name }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* `${{ github.sha }}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üöÄ *New build uploaded to TestFlight!*\nüì± Testers will receive notifications shortly\n‚è∞ Build completed at: $(date)"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Build Logs"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Open TestFlight"
                      },
                      "url": "https://appstoreconnect.apple.com/apps/6744866152/testflight/ios"
                    }
                  ]
                }
              ]
            }

      - name: ‚ùå Failure Summary
        if: failure()
        run: |
          echo "## ‚ùå iOS Build Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîç Troubleshooting Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. **Check the build logs** above for specific error messages" >> $GITHUB_STEP_SUMMARY
          echo "2. **Verify credentials** - run \`eas build --platform ios --profile preview --auto-submit\` locally" >> $GITHUB_STEP_SUMMARY
          echo "3. **Check App Store Connect** - ensure your app and certificates are active" >> $GITHUB_STEP_SUMMARY
          echo "4. **Verify bundle identifier** matches what's configured in App Store Connect" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîß Quick Fixes:" >> $GITHUB_STEP_SUMMARY
          echo "- If credentials issue: Run \`eas credentials -p ios\` locally" >> $GITHUB_STEP_SUMMARY
          echo "- If build issue: Check \`app.json\` and \`eas.json\` configuration" >> $GITHUB_STEP_SUMMARY
          echo "- If submission issue: Check App Store Connect API key status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Failed at:** $(date)" >> $GITHUB_STEP_SUMMARY

      - name: üì¢ Slack Failure Notification
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "‚ùå iOS Build Failed"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*App:* Aji Salit"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Platform:* üçé iOS"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Status:* ‚ùå Failed"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered by:* ${{ github.actor }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:* `${{ github.ref_name }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* `${{ github.sha }}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üîç *Build failed during deployment*\nCheck the logs for details and troubleshoot the issue."
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Error Logs"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
